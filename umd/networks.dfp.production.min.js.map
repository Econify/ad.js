{"version":3,"file":"networks.dfp.production.min.js","sources":["../src/utils/AdJsError.ts","../src/utils/loadScript.ts"],"sourcesContent":["type ValidErrorCode = 'Misconfiguration' | 'Invalid Parameters' | 'Malformed Request';\n\nclass AdJsError extends Error {\n  public code: ValidErrorCode;\n  public message: string;\n\n  constructor(code: ValidErrorCode, message: string) {\n    super(message);\n    this.code = code;\n    this.message = message;\n  }\n}\n\nexport default AdJsError;\n","interface IScriptAttributes {\n  [key: string]: boolean | string;\n}\n\nconst loadScript = (url: string, attributes: IScriptAttributes = {}): Promise<void> =>\n  new Promise((resolve) => {\n    const scriptTag: HTMLScriptElement = document.createElement('script');\n\n    scriptTag.src = url;\n    scriptTag.onload = () => resolve();\n\n    Object.keys(attributes).forEach((key) => {\n      const value: boolean | string = attributes[key];\n\n      if (typeof value === 'boolean') {\n        if (!value) {\n          return;\n        }\n\n        scriptTag.setAttribute(key, key);\n        return;\n      }\n\n      scriptTag.setAttribute(key, value);\n    });\n\n    document.getElementsByTagName('head')[0].appendChild(scriptTag);\n  });\n\nexport default loadScript;\n"],"names":[],"mappings":"sHAEA,4ECEA"}